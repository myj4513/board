<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="study.board.mapper.ArticleMapper">
    <insert id="add" parameterType="Article">
        insert into
            article(title, content, user_id, category)
            values(#{title}, #{content}, #{userId}, #{category})
    </insert>

    <select id="findById" parameterType="int" resultType="Article">
        select * from article where id=#{articleId}
    </select>

    <select id="count" resultType="int">
        select count(*) from article where category=#{category}
    </select>

    <select id="countAll" resultType="int">
        select count(*) from article
    </select>

    <select id="getView" resultType="int">
        select views from article where id=#{articleId}
    </select>

    <update id="addView">
        update article set views=#{views} where id=#{articleId}
    </update>

    <select id="findArticlesById" resultType="ArticleView">
        select id, title, regdate from article
        where user_id=#{userId}
        limit #{num}, #{measure}
    </select>

    <select id="findWithCategoryOrderByViews" resultType="ArticleView">
        select id, title, regdate from article
        where category=#{category}
        order by views desc
        limit #{num}, #{measure}
    </select>

    <select id="findWithCategoryOrderByRegDate" resultType="ArticleView">
        select id, title, regdate from article
        where category=#{category} order by regdate desc
        limit #{num}, #{measure}
    </select>

    <select id="findWithCategoryOrderByLikes" resultType="ArticleView">
        select ar.id, ar.title, ar.regdate
        from (
            select article_id, count(likes) as cnt
            from article_likes
            where likes = 1
            group by article_id
            ) as ar_li
            join article as ar
                on ar.id = ar_li.article_id and ar.category=#{category}
        order by ar_li.cnt desc
        limit #{num}, #{measure}
    </select>

    <select id="findOrderByViews" resultType="ArticleView">
        select id, title, regdate from article
        order by views desc
        limit #{num}, #{measure}
    </select>

    <select id="findOrderByRegDate" resultType="ArticleView">
        select id, title, regdate from article
        order by regdate desc
        limit #{num}, #{measure}
    </select>

    <select id="findOrderByLikes" resultType="ArticleView">
        select ar.id, ar.title, ar.regdate, ifnull(ar_li.cnt,0)
        from article as ar
            left join(
                select article_id, count(likes) as cnt
                from article_likes where likes=1
                group by article_id
                ) as ar_li
                on ar.id = ar_li.article_id
        order by ar_li.cnt desc
        limit #{num}, #{measure}
    </select>
    <delete id="deleteById">
        delete from article where id=#{articleId}
    </delete>

    <update id="updateById">
        update article set title=#{articleForm.title}, content=#{articleForm.content}, category=#{articleForm.category} where id=#{articleId}
    </update>
</mapper>